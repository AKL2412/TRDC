<?php

namespace Proxies\__CG__\TRC\CoreBundle\Entity\Client;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Client extends \TRC\CoreBundle\Entity\Client\Client implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'id', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'radical', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'intitule', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'identite', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'revenu', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'logement', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'pac', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'coordonnee', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'profession', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'employeur'];
        }

        return ['__isInitialized__', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'id', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'radical', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'intitule', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'identite', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'revenu', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'logement', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'pac', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'coordonnee', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'profession', '' . "\0" . 'TRC\\CoreBundle\\Entity\\Client\\Client' . "\0" . 'employeur'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Client $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRadical($radical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRadical', [$radical]);

        return parent::setRadical($radical);
    }

    /**
     * {@inheritDoc}
     */
    public function getRadical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRadical', []);

        return parent::getRadical();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentite(\TRC\CoreBundle\Entity\Client\Identite $identite = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentite', [$identite]);

        return parent::setIdentite($identite);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentite', []);

        return parent::getIdentite();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevenu(\TRC\CoreBundle\Entity\Client\Revenu $revenu = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevenu', [$revenu]);

        return parent::setRevenu($revenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevenu', []);

        return parent::getRevenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogement(\TRC\CoreBundle\Entity\Client\Logement $logement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogement', [$logement]);

        return parent::setLogement($logement);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogement', []);

        return parent::getLogement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPac(\TRC\CoreBundle\Entity\Client\PAC $pac = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPac', [$pac]);

        return parent::setPac($pac);
    }

    /**
     * {@inheritDoc}
     */
    public function getPac()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPac', []);

        return parent::getPac();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoordonnee(\TRC\CoreBundle\Entity\Client\Coordonnee $coordonnee = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoordonnee', [$coordonnee]);

        return parent::setCoordonnee($coordonnee);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoordonnee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoordonnee', []);

        return parent::getCoordonnee();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfession(\TRC\CoreBundle\Entity\Client\Profession $profession = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfession', [$profession]);

        return parent::setProfession($profession);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfession()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfession', []);

        return parent::getProfession();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployeur(\TRC\CoreBundle\Entity\Client\Employeur $employeur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployeur', [$employeur]);

        return parent::setEmployeur($employeur);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeur', []);

        return parent::getEmployeur();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntitule($intitule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntitule', [$intitule]);

        return parent::setIntitule($intitule);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntitule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntitule', []);

        return parent::getIntitule();
    }

}
